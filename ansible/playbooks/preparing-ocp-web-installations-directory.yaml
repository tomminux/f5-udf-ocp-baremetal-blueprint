## ----------------------------------------------------------------------------
## ..:: ocp-web "installations" directory preparation ::..
## ----------------------------------------------------------------------------

## Installing ocp-web Server
- hosts: ocp-web
  remote_user: root
  tasks:

   ## Peparing "installations" directory
    - name: Create /usr/share/nginx/html/installations directory
      file:
        path: /usr/share/nginx/html/installations
        state: directory

    - name: Changing "html" nginx dir permissions
      shell: chmod -R g+srwx /usr/share/nginx/html/
    
    - name: download OCP related executables
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_release }}/openshift-install-linux-{{ ocp_release }}.tar.gz
        dest: /usr/share/nginx/html/installations
    
    - name: download OCP related executables
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_release }}/openshift-client-linux-{{ ocp_release }}.tar.gz
        dest: /usr/share/nginx/html/installations
    
    - name: download RHCOS related files
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ rhcos_branch }}/latest/rhcos-{{ rhcos_release }}-x86_64-live-initramfs.x86_64.img
        dest: /usr/share/nginx/html/installations
    
    - name: download RHCOS related files
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ rhcos_branch }}/latest/rhcos-{{ rhcos_release }}-x86_64-live-kernel-x86_64
        dest: /usr/share/nginx/html/installations

    - name: download RHCOS related files
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ rhcos_branch }}/latest/rhcos-{{ rhcos_release }}-x86_64-live-rootfs.x86_64.img
        dest: /usr/share/nginx/html/installations

    - name: Unarchive linux OCP Client
      ansible.builtin.unarchive:
        src: /usr/share/nginx/html/installations/openshift-client-linux-{{ ocp_release }}.tar.gz
        dest: /usr/share/nginx/html/installations
        remote_src: yes

    - name: Unarchive linux OCP Installer
      ansible.builtin.unarchive:
        src: /usr/share/nginx/html/installations/openshift-install-linux-{{ ocp_release }}.tar.gz
        dest: /usr/share/nginx/html/installations
        remote_src: yes

    - name: Copy install-config.yaml file
      template:
        src: install-config.yaml.j2
        dest: /usr/share/nginx/html/installations/install-config.yaml

    - name: Copy install-config.yaml file (backup)
      template:
        src: install-config.yaml.j2
        dest: /usr/share/nginx/html/installations/install-config.yaml-backup

    - name: Openshift install preparation - Creating manifest files
      shell: /usr/share/nginx/html/installations/openshift-install create manifests --dir=/usr/share/nginx/html/installations/

    - name: Configuring masters as non schedulable
      replace:
        path: /usr/share/nginx/html/installations/manifests/cluster-scheduler-02-config.yml
        regexp: 'true'
        replace: "false"

    - name: Openshift install preparation - Creating ignition files
      shell: /usr/share/nginx/html/installations/openshift-install create ignition-configs --dir=/usr/share/nginx/html/installations/

    - name: Openshift install preparation - Creating ignition files
      shell: chmod o+r /usr/share/nginx/html/installations/*

    - name: Copy source.rc for root
      copy:
        src: ocp-web/source.rc
        dest: /root

    - name: Creating .kube directory for root
      file:
        path: /root/.kube
        state: directory

    - name: Creating .kube directory for ubuntu
      file:
        owner: ubuntu 
        path: /home/ubuntu/.kube
        state: directory      
        
    - name: Copy kubeconfig file to .kube root directory
      copy:
        remote_src: yes
        src: /usr/share/nginx/html/installations/auth/kubeconfig
        dest: /root/.kube/config

    - name: Copy kubeconfig file to .kube ubuntu directory
      copy:
        remote_src: yes
        owner: ubuntu
        src: /usr/share/nginx/html/installations/auth/kubeconfig
        dest: /home/ubuntu/.kube/config

    - name: Copy oc binary to /usr/local/bin
      copy:
        remote_src: yes
        src: /usr/share/nginx/html/installations/oc
        dest: /usr/local/bin
        mode: 0755
